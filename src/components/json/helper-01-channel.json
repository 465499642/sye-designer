{"name":"system-channel","master":true,"subsystem":false,"version":"1.0.0","description":"Send messages threw a channel\n\n\nYou can send messages from one system to another system with channels. To do that:\n\n1. Define an event with parameters in 'RuntimeChannel' schema and model\n2. In 'RuntimeChannel' 'send' method, define how to send the message to another channel (webRTC, XHR, ...)\n3. Define how to get the message and send it to the current system with 'runtime.message' API\n\nThen:\n\n- to send a message: \nthis.require('channel').myevent(param1, param2, ...)\n\n- to listen to a message: \nthis.require('channel').on('myevent', function myevent(data) {})","schemas":{"104ad1f48518376":{"_id":"104ad1f48518376","_name":"RuntimeChannel","_inherit":["RuntimeComponent"],"send":"event"}},"models":{"135c71078810af2":{"_id":"135c71078810af2","_name":"RuntimeChannel","send":{"params":[{"name":"message","type":"message"}]}}},"behaviors":{"1ae8e11ece1a658":{"_id":"1ae8e11ece1a658","component":"RuntimeChannel","state":"send","action":"function send(message) { \n\n}","useCoreAPI":false,"core":false}},"types":{"message":{"name":"message","type":"object","schema":{"event":{"type":"string","mandatory":true},"from":{"type":"string","mandatory":false},"data":{"type":"object","mandatory":true}},"core":true}},"components":{"RuntimeChannel":{"channel":{"_id":"channel"}}},"_id":"12eaf148b211195"}