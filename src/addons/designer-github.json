{"name":"designer-github","master":false,"subsystem":false,"version":"0.1.0","description":"","schemas":{"13bdf1ff1815d7c":{"_id":"13bdf1ff1815d7c","_name":"Github","_inherit":["RuntimeComponent"],"refresh":"method","push":"method"}},"models":{"1c23c1ed49186e9":{"_id":"1c23c1ed49186e9","_name":"Github","refresh":{},"push":{"params":[{"name":"comment","type":"string","mandatory":false,"default":""},{"name":"createHTML","type":"boolean","mandatory":false,"default":false}]}}},"behaviors":{"1c2e3132fd18c75":{"_id":"1c2e3132fd18c75","component":"Github","state":"refresh","action":"function refresh() { \n  var config = {},\n      gh = null,\n      userName ='',\n      repository = '';\n\n  config = this.require('storage').get('system-designer-config');\n  if (config && config.githubToken && config.githubRepository) { \n\t\n\t  gh = new GitHub({\n      token: atob(config.githubToken)\n    });\n    \n    userName = config.githubRepository.split('/')[0];\n    repository = config.githubRepository.split('/')[1];\n    \n    repo = gh.getRepo(userName, repository);\n    \n    repo.getContents('master', '', 'raw')\n        .then(function (contents) {\n          contents.data.forEach(function (item) {\n            if (item.type === 'file' && item.name.indexOf('.json') !== -1) {\n              repo.getContents('master', item.name, 'raw')\n                  .then(function (content) {\n                    var system = content.data,\n                        systems = runtime.require('storage').get('system-designer-systems'),\n                        designer = runtime.require('designer'),\n                        System = runtime.require('System'),\n                        sys = null;\n                        \n                    // check valid system\n                    if (\n                        Object.keys(system).indexOf('schemas') && \n                        Object.keys(system).indexOf('models') &&\n                        Object.keys(system).indexOf('behaviors') &&\n                        Object.keys(system).indexOf('types') &&\n                        Object.keys(system).indexOf('components') \n                        ) {\n                        \n                      delete system.classInfo;\n                      \n                      if (runtime.require('storage').get(system._id)) {\n                        runtime.require('message').success('system ' + system.name  + ' updated.');\n                      } else {\n                        runtime.require('message').success('system ' + system.name  + ' created.');\n                      }\n                      \n                      // save system\n                      runtime.require('storage').set(system._id, system);\n              \n                      // save index\n                      if (!systems ) {\n                          systems = { 'systems': [system._id] };\n                      } else {\n                          if (systems.systems.indexOf(system._id) === -1) {\n                              systems.systems.push(system._id);\n                          }\n                      }\n                      runtime.require('storage').set('system-designer-systems', systems);\n                      \n                      // refresh\n                      if (!designer.system()) {\n                        sys = new System(system);\n                        designer.system(sys);\n                        designer.space(sys.name());\n                      }\n                      \n                      designer.spaces().render();\n                      designer.workspace().refresh();\n                      designer.updateRouter();\n                    }\n                  })\n                  .catch(function (e){\n                    runtime.require('message').danger('<strong>Github:</strong> ' + e.response.data.message + '.');\n                  });\n            }\n          });  \n          \n          if (contents.data.length === 0) {\n            runtime.require('message').info('there is no system in your repository.');\n          }\n        })\n        .catch(function (e) {\n          runtime.require('message').danger('<strong>Github:</strong> ' + e.response.data.message + '.');\n        });\n  } else {\n    runtime.require('message').warning('no configuration found for Github. Please update the configuration.');\n  }\n}","useCoreAPI":false,"core":false},"11845140101e5ae":{"_id":"11845140101e5ae","component":"Github","state":"push","action":"function push(comment, createHTML) { \n  var config = {},\n      gh = null,\n      userName ='',\n      repository = '',\n      htmlSource = '',\n      designer = null,\n      system = {};\n\n  config = this.require('storage').get('system-designer-config');\n  if (config && config.githubToken && config.githubRepository) { \n\t\n\t  gh = new GitHub({\n      token: atob(config.githubToken)\n    });\n    \n    userName = config.githubRepository.split('/')[0];\n    repository = config.githubRepository.split('/')[1];\n    \n    designer = this.require('designer');\n    \n    if (designer.system()) {\n      system = this.require('db').collections().System.find({\n        '_id': designer.system().id()\n      })[0];\n    \n      repo = gh.getRepo(userName, repository);\n      \n      repo.writeFile('master', system.name + '.json', JSON.stringify(system), comment || 'updated with System Designer', {})\n          .then(function (response) {\n            var name = response.data.content.name.replace('.json', '');\n            runtime.require('message').success('system ' + name + ' pushed on Github.');\n          })\n          .catch(function (e) {\n              runtime.require('message').danger('<strong>Github:</strong> ' + e.response.data.message + '.');\n          });\n      \n      if (createHTML) {\n        js = decodeURIComponent(this.require('system-runtime.min.js').source());\n        htmlSource = this.require('export-app-github.html').source();\n        htmlSource = htmlSource\n          .replace(/{{library}}/g, js)\n          .replace(/{{library}}/g, function() {return '\\$&'})\n          .replace(/{{name}}/g, this.require('designer').system().name());\n        \n        repo.writeFile('master', system.name + '.html', htmlSource, 'created with System Designer', {})\n        .then(function (response) {\n          var name = response.data.content.name;\n          runtime.require('message').success(name + ' created on Github.');\n        })\n        .catch(function (e) {\n            runtime.require('message').danger('<strong>Github:</strong> ' + e.response.data.message + '.');\n        });   \n      }\n    } else {\n      runtime.require('message').warning('there is no system to push on Github.');\n    }\n  } else {\n      runtime.require('message').warning('no configuration found for Github. Please update the configuration.');\n  }\n}","useCoreAPI":false,"core":false}},"types":{},"components":{"Github":{"github":{"_id":"github"}}},"_id":"1b9061a92113859"}