{
  "name": "editor-schema",
  "master": true,
  "subsystem": false,
  "version": "1.0.0",
  "description": "",
  "schemas": {
    "t19b6b11ff31158d": {
      "_name": "ToolBarItem",
      "html": "link",
      "position": "property",
      "type": "property",
      "hide": "method",
      "show": "method",
      "render": "method",
      "click": "event",
      "_id": "t19b6b11ff31158d",
      "_inherit": [
        "_Component"
      ]
    },
    "p1f6f51d9f111925": {
      "_name": "MenuAction",
      "html": "link",
      "position": "property",
      "type": "property",
      "hide": "method",
      "show": "method",
      "render": "method",
      "_id": "p1f6f51d9f111925",
      "_inherit": [
        "_Component"
      ]
    },
    "t14a79156a81862a": {
      "_name": "MenuHeader",
      "html": "link",
      "type": "property",
      "hide": "method",
      "show": "method",
      "render": "method",
      "_id": "t14a79156a81862a",
      "_inherit": [
        "_Component"
      ]
    },
    "l1d113198721599d": {
      "_name": "MenuItem",
      "html": "link",
      "position": "property",
      "type": "property",
      "name": "property",
      "hide": "method",
      "show": "method",
      "render": "method",
      "click": "event",
      "_id": "l1d113198721599d",
      "_inherit": [
        "_Component"
      ]
    },
    "f1092816b571e03c": {
      "_name": "Workspace",
      "designer": "property",
      "create": "method",
      "load": "method",
      "clear": "method",
      "render": "method",
      "_id": "f1092816b571e03c",
      "_inherit": [
        "_Component"
      ]
    },
    "k1b97018e111d0e3": {
      "_name": "Server",
      "designer": "property",
      "start": "method",
      "_id": "k1b97018e111d0e3",
      "_inherit": [
        "_Component"
      ]
    },
    "o1ead8184af1a83e": {
      "_name": "Designer",
      "_inherit": [
        "_Component"
      ],
      "version": "property",
      "menubar": "property",
      "toolbar": "property",
      "workspace": "property",
      "spaces": "property",
      "context": "property",
      "oldContext": "property",
      "space": "property",
      "server": "property",
      "system": "property",
      "debug": "property",
      "filter": "property",
      "type": "property",
      "store": "property",
      "state": "property",
      "runWindow": "property",
      "debugWindow": "property",
      "updateRouter": "method",
      "syncModel": "method",
      "syncBehavior": "method",
      "syncComponent": "method",
      "createModel": "method",
      "createBehavior": "method",
      "deleteSchema": "method",
      "linkModel": "method",
      "save": "method",
      "saveCordova": "method",
      "saveAs": "method",
      "welcome": "method",
      "generateId": "method",
      "open": "method",
      "render": "event",
      "logs": "collection",
      "isCordova": "method",
      "isElectron": "method",
      "updateCordovaContext": "method",
      "messages": "property",
      "runMessages": "method",
      "lastPage": "property",
      "getGeneratedSchema": "method",
      "getGeneratedModel": "method",
      "mergeBehavior": "method",
      "_id": "o1ead8184af1a83e"
    }
  },
  "models": {
    "u1f4c7177bb1a459": {
      "_name": "ToolBarItem",
      "html": {
        "type": "@HTML",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "hide": {},
      "show": {},
      "render": {},
      "click": {},
      "_id": "u1f4c7177bb1a459"
    },
    "w124ac16b591df57": {
      "_name": "MenuAction",
      "html": {
        "type": "@HTML",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "hide": {},
      "show": {},
      "render": {},
      "_id": "w124ac16b591df57"
    },
    "f13ebe1ad331b263": {
      "_name": "MenuHeader",
      "html": {
        "type": "@HTML",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "hide": {},
      "show": {},
      "render": {},
      "_id": "f13ebe1ad331b263"
    },
    "u1f9a01abe31b3bf": {
      "_id": "u1f9a01abe31b3bf",
      "_name": "MenuItem",
      "html": {
        "type": "@HTML",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "position": {
        "type": "number",
        "readOnly": false,
        "mandatory": false,
        "default": 0
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "name": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "hide": {},
      "show": {},
      "render": {},
      "click": {}
    },
    "v1435e1809e10be7": {
      "_id": "v1435e1809e10be7",
      "_name": "Workspace",
      "designer": {
        "type": "@Designer",
        "readOnly": true,
        "mandatory": true,
        "default": {}
      },
      "create": {},
      "load": {},
      "clear": {},
      "render": {}
    },
    "e1ca371b8a41af7b": {
      "_id": "e1ca371b8a41af7b",
      "_name": "Server",
      "designer": {
        "type": "@Designer",
        "readOnly": true,
        "mandatory": true,
        "default": {}
      },
      "start": {}
    },
    "q129be1c61b18285": {
      "_id": "q129be1c61b18285",
      "_name": "Designer",
      "version": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": "2.0.0-alpha.1"
      },
      "menubar": {
        "type": "@MenuBar",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "toolbar": {
        "type": "@ToolBar",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "workspace": {
        "type": "@Workspace",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "spaces": {
        "type": "@Spaces",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "context": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "oldContext": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "space": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "server": {
        "type": "@Server",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "system": {
        "type": "@System",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "debug": {
        "type": "boolean",
        "readOnly": false,
        "mandatory": false,
        "default": false
      },
      "filter": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": ""
      },
      "type": {
        "type": "editorType",
        "readOnly": false,
        "mandatory": false,
        "default": "designer"
      },
      "store": {
        "type": "@Store",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "state": {
        "type": "@DesignerState",
        "readOnly": false,
        "mandatory": false,
        "default": {}
      },
      "runWindow": {
        "type": "object",
        "readOnly": false,
        "mandatory": false,
        "default": null
      },
      "debugWindow": {
        "type": "object",
        "readOnly": false,
        "mandatory": false,
        "default": null
      },
      "updateRouter": {},
      "syncModel": {
        "params": [
          {
            "name": "schema",
            "type": "object",
            "mandatory": false,
            "default": {}
          }
        ]
      },
      "syncBehavior": {
        "params": [
          {
            "name": "model",
            "type": "object",
            "mandatory": false,
            "default": {}
          }
        ]
      },
      "syncComponent": {
        "params": [
          {
            "name": "model",
            "type": "object",
            "mandatory": false,
            "default": {}
          },
          {
            "name": "forceDelete",
            "type": "boolean",
            "mandatory": false,
            "default": true
          }
        ]
      },
      "createModel": {
        "params": [
          {
            "name": "schema",
            "type": "object",
            "mandatory": false,
            "default": {}
          }
        ]
      },
      "createBehavior": {
        "params": [
          {
            "name": "type",
            "type": "string",
            "mandatory": false,
            "default": "method"
          },
          {
            "name": "model",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "state",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "def",
            "type": "object",
            "mandatory": false,
            "default": {}
          }
        ]
      },
      "deleteSchema": {
        "params": [
          {
            "name": "schemaId",
            "type": "string",
            "mandatory": false,
            "default": ""
          }
        ]
      },
      "linkModel": {
        "params": [
          {
            "name": "source",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "target",
            "type": "string",
            "mandatory": false,
            "default": ""
          }
        ]
      },
      "save": {},
      "saveCordova": {},
      "saveAs": {
        "params": [
          {
            "name": "data",
            "type": "object",
            "mandatory": false,
            "default": {}
          },
          {
            "name": "fileName",
            "type": "string",
            "mandatory": false,
            "default": ""
          }
        ]
      },
      "welcome": {},
      "generateId": {
        "result": "string"
      },
      "open": {
        "params": [
          {
            "name": "url",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "target",
            "type": "string",
            "mandatory": false,
            "default": ""
          },
          {
            "name": "isExt",
            "type": "boolean",
            "mandatory": false,
            "default": false
          }
        ]
      },
      "render": {},
      "logs": {
        "type": [
          "@Log"
        ],
        "readOnly": false,
        "mandatory": false,
        "default": []
      },
      "isCordova": {
        "result": "boolean"
      },
      "isElectron": {
        "result": "boolean"
      },
      "updateCordovaContext": {},
      "messages": {
        "type": "array",
        "readOnly": false,
        "mandatory": false,
        "default": []
      },
      "runMessages": {
        "params": [
          {
            "name": "messages",
            "type": "array",
            "mandatory": true,
            "default": []
          }
        ]
      },
      "lastPage": {
        "type": "string",
        "readOnly": false,
        "mandatory": false,
        "default": "index.html"
      },
      "getGeneratedSchema": {
        "params": [
          {
            "name": "schema",
            "type": "string",
            "mandatory": true,
            "default": ""
          }
        ],
        "result": "object"
      },
      "getGeneratedModel": {
        "params": [
          {
            "name": "model",
            "type": "string",
            "mandatory": true,
            "default": ""
          }
        ],
        "result": "object"
      },
      "mergeBehavior": {
        "params": [
          {
            "name": "behaviors",
            "type": "object",
            "mandatory": true,
            "default": {}
          },
          {
            "name": "behavior",
            "type": "object",
            "mandatory": true,
            "default": {}
          },
          {
            "name": "sysId",
            "type": "string",
            "mandatory": true,
            "default": ""
          },
          {
            "name": "systemName",
            "type": "string",
            "mandatory": true,
            "default": ""
          }
        ]
      }
    }
  },
  "behaviors": {
    "a1c11a1251c1309b": {
      "_id": "a1c11a1251c1309b",
      "component": "Workspace",
      "state": "init",
      "action": "function init(conf) { \n  var Editor = null,\n    designer = null,\n    editor = null;\n\n  Editor = this.require('Editor');\n  designer = this.require('designer');\n\n  if (designer.isCordova()) {\n    editor = new Editor({\n      '_id': 'editor',\n      'type': 'codemirror',\n      'context': 'schema',\n      'editor': CodeMirror($('#designer-editor')[0], {\n        lineNumbers: true,\n        styleActiveLine: true,\n        'mode': 'application/json',\n        'theme': 'eclipse',\n        'tabSize': 2,\n        'autoCloseBrackets': true\n      })\n    });\n  } else {\n    editor = new Editor({\n      '_id': 'editor',\n      'type': 'ace',\n      'context': 'schema',\n      'editor': ace.edit('designer-editor')\n    });\n  }\n}",
      "useCoreAPI": false,
      "core": false
    },
    "b18fab15f501e117": {
      "_id": "b18fab15f501e117",
      "component": "Workspace",
      "state": "render",
      "action": "function render() { \n  this.require('editor').render();\n}",
      "useCoreAPI": false,
      "core": false
    },
    "b1a27810c7910e1c": {
      "_id": "b1a27810c7910e1c",
      "component": "Server",
      "state": "start",
      "action": "function start() { \n  var RuntimeChannel = null,\n    channel = null,\n    id = '',\n    editor = this.require('editor'),\n    designer = this.require('designer');\n\n  this.require('storage').on('changed', function (obj) {\n    if (typeof obj['system-designer-message'] !== 'undefined') {\n      $db._Message.insert(obj['system-designer-message'].newValue);\n    }\n  }, true);\n\n  RuntimeChannel = this.require('_Channel');\n  channel = new RuntimeChannel({\n    '_id': 'channel'\n  });\n\n  channel.on('send', function (message) {\n    if (message.event.indexOf('$system') !== 0) {\n      var config = this.require('storage').get('system-designer-config'),\n        designer = this.require('designer'),\n        messages = [],\n        system = {};\n\n      if (designer.isCordova()) {\n        messages = designer.messages();\n        messages.push(message);\n        designer.messages(messages);\n      }\n\n      this.require('storage').set('system-designer-message', message);\n\n      // message for server debug\n      if (typeof config !== 'undefined' && typeof config.debugType !== 'undefined' && config.debugType === 'server' && config.urlServer) {\n        $.post(config.urlServer + ':8888/' + message.event, encodeURIComponent(JSON.stringify(message.data)));\n      }\n    }\n  });\n\n  id = document.location.href.split('#')[1].split('?')[0];\n  systemId = document.location.href.split('#')[2].split('?')[0];\n\n  system = this.require('storage').get(systemId);\n  schema = system.schemas[id];\n\n  designer.store().uuid(id);\n  designer.store().data(schema);\n\n  document.title = 'schema ' + schema._name + ' · system ' + system.name;\n\n  editor.initValue(JSON.stringify(schema, null, '\\t'), 2);\n}",
      "useCoreAPI": true,
      "core": false
    },
    "b105d21fac11b017": {
      "_id": "b105d21fac11b017",
      "component": "Designer",
      "state": "render",
      "action": "function render() {\n  var Store = null,\n    store = null,\n    MenuBar = null,\n    menubar = null,\n    ToolBar = null,\n    toolbar = null,\n    Workspace = null,\n    workspace = null,\n    Server = null,\n    server = null;\n\n  // type\n  this.type(window.location.href.split('.html')[0].split('/')[window.location.href.split('.html')[0].split('/').length - 1]);\n\n  // store\n  Store = this.require('Store');\n  store = new Store();\n  this.store(store);\n\n  // menu\n  MenuBar = this.require('MenuBar');\n  menubar = new MenuBar({\n    designer: this\n  });\n  this.menubar(menubar);\n\n  // toolbar\n  ToolBar = this.require('ToolBar');\n  toolbar = new ToolBar({\n    designer: this\n  });\n  this.toolbar(toolbar);\n\n  // workspace\n  Workspace = this.require('Workspace');\n  workspace = new Workspace({\n    designer: this\n  });\n  this.workspace(workspace);\n\n  // server\n  Server = this.require('Server');\n  server = new Server({\n    'designer': this\n  });\n  this.server(server);\n\n  if (this.isCordova()) {\n    this.updateCordovaContext();\n  }\n\n  //render\n  this.menubar().render();\n  this.toolbar().render();\n  this.workspace().render();\n  this.server().start();\n\n  this.updateRouter();\n\n  $(function () {\n    $('[data-toggle=\"tooltip\"]').tooltip({ 'container': 'body', delay: { \"show\": 1000, \"hide\": 100 } });\n  });\n}",
      "useCoreAPI": false,
      "core": false
    },
    "c1cd1e1b3ac14518": {
      "_id": "c1cd1e1b3ac14518",
      "component": "Designer",
      "state": "updateRouter",
      "action": "function updateRouter() { \n  var menubar = [],\n    i = 0,\n    length = 0,\n    id = '',\n    href = '';\n\n  id = decodeURIComponent(document.location.href.split('#')[1]);\n  collection = document.location.href.split('#')[2];\n\n  // update menubar\n  menubar = $('#designer-menubar-items > li > a');\n  length = menubar.length;\n  for (i = 0; i < length; i++) {\n    href = menubar[i].href;\n    context = href.split('#')[href.split('#').length - 1];\n    menubar[i].href = '#' + id + '#' + collection + '#' + context;\n  }\n}",
      "useCoreAPI": false,
      "core": false
    },
    "u102ee100eb1fb61": {
      "_id": "u102ee100eb1fb61",
      "component": "Designer",
      "state": "save",
      "action": "function save() { \n  var val = this.require('editor').getValue(),\n    designer = this.require('designer'),\n    message = this.require('message'),\n    schema = null,\n    property = '',\n    propVal = '';\n\n  try {\n    schema = JSON.parse(val);\n  } catch (e) {\n    message.danger('Can not save your schema: your schema has an invalid structure.');\n    return;\n  }\n\n  for (property in schema) {\n    if (schema.hasOwnProperty(property) && property.indexOf('_') !== 0) {\n      propVal = schema[property];\n      if (['property', 'link', 'collection', 'event', 'method'].indexOf(propVal) === -1) {\n        message.danger('Invalid value for the property \\'' + property + '\\’.<br>Authorized values are: \\'property\\', \\'link\\', \\'collection\\', \\'event\\' and \\'method\\'.');\n        return;\n      }\n    }\n  }\n\n  for (property in schema) {\n    if (property.indexOf(' ') !== -1) {\n      message.danger('Invalid property name \\'' + property + '\\’. <br>Space is not authorized in the name of a property.');\n      return;\n    }\n    propVal = schema[property];\n    if (['property', 'link', 'collection', 'event', 'method'].indexOf(propVal) !== -1 && property.indexOf('_') === 0) {\n      message.danger('Invalid property name \\'' + property + '\\’. <br>A property name can not start with \\'_\\'.');\n      return;\n    }\n  }\n\n  if (!schema._name) {\n    message.danger('The property \\'_name\\' is missing.');\n    return;\n  }\n\n  if (!schema._id) {\n    message.danger('The property \\'_id\\' is missing.');\n    return;\n  }\n\n  // check if name change\n  if (designer.store().data()._name !== schema._name) {\n    this.require('channel').$editorUpdateSchemaName(schema._name, designer.store().uuid());\n    document.title = 'schema ' + schema._name + ' · ' + document.title.split('·')[1].trim();\n  }\n\n  designer.store().data(schema);\n\n  // check if ID change\n  if (designer.store().uuid() !== designer.store().data()._id) {\n    this.require('channel').$editorUpdateSchemaId(designer.store().uuid(), designer.store().data()._id);\n    designer.store().uuid(designer.store().data()._id);\n  }\n\n  this.require('channel').$editorUpdateSchema(designer.store().uuid(), designer.store().data());\n  message.clean();\n  message.success('Schema saved.');\n}",
      "useCoreAPI": false,
      "core": false
    },
    "k171ad182081ca3c": {
      "_id": "k171ad182081ca3c",
      "component": "l1ffcf1761317c7b",
      "state": "start",
      "action": "function start() { \n  this.require('designer').render();\n}",
      "useCoreAPI": false,
      "core": false
    }
  },
  "types": {},
  "components": {
    "ToolBarItem": {
      "1dbc51200e11510": {
        "_id": "1dbc51200e11510",
        "html": "toolbar-item-help.html",
        "position": 80,
        "type": "schema"
      },
      "1dbc51200e116e7": {
        "_id": "1dbc51200e116e7",
        "html": "toolbar-item-save.html",
        "position": 10,
        "type": "schema"
      },
      "1dbc51200e116e8": {
        "_id": "1dbc51200e116e8",
        "html": "toolbar-item-copyright.html",
        "position": 90,
        "type": "schema"
      },
      "tdbc51200e11z00": {
        "_id": "tdbc51200e11z00",
        "html": "toolbar-item-undo.html",
        "position": 20,
        "type": "schema"
      },
      "tdbc51200e11z01": {
        "_id": "tdbc51200e11z01",
        "html": "toolbar-item-redo.html",
        "position": 30,
        "type": "schema"
      },
      "tdbc51200e11z02": {
        "_id": "tdbc51200e11z02",
        "html": "toolbar-item-select-all.html",
        "position": 40,
        "type": "schema"
      }
    },
    "Designer": {
      "designer": {
        "_id": "designer",
        "context": "",
        "debug": false,
        "debugWindow": null,
        "filter": "",
        "lastPage": "index.html",
        "logs": [],
        "menubar": {},
        "messages": [],
        "oldContext": "",
        "runWindow": null,
        "server": {},
        "space": "",
        "spaces": {},
        "state": {},
        "store": {},
        "system": {},
        "toolbar": {},
        "type": "designer",
        "version": "2.0.0-alpha.1",
        "workspace": {}
      }
    },
    "MenuItem": {
      "1f1781882618106": {
        "_id": "1f1781882618106",
        "name": "schema",
        "html": "menu-item-schema.html",
        "position": 10,
        "type": "schema"
      }
    },
    "MenuAction": {
      "1f8571164c179bg": {
        "_id": "1f8571164c179bg",
        "html": "menu-action-version.html",
        "position": 10,
        "type": "schema"
      }
    },
    "MenuHeader": {
      "1fb101b99813a15": {
        "_id": "1fb101b99813a15",
        "html": "menu-header-schema.html",
        "type": "schema"
      }
    }
  },
  "_id": "l1ffcf1761317c7b"
}