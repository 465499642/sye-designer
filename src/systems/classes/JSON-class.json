{
  "name": "JSON-class",
  "master": false,
  "version": "1.0.0",
  "description": "",
  "schemas": {
    "r1bacb1740a1fc45": {
      "_name": "JSON",
      "source": "property",
      "_id": "r1bacb1740a1fc45",
      "_inherit": ["_Component"],
      "platform": "property"
    }
  },
  "models": {
    "v1146f14eaa15324": {
      "_name": "JSON",
      "source": {
        "type": "json",
        "readOnly": true,
        "mandatory": true,
        "default": {}
      },
      "_id": "v1146f14eaa15324",
      "platform": {
        "type": "platform",
        "readOnly": false,
        "mandatory": false,
        "default": "all"
      }
    }
  },
  "behaviors": {},
  "types": {},
  "components": {
    "JSON": {
      "01-create-extension.json": {
        "_id": "01-create-extension.json",
        "platform": "all",
        "source": {
          "name": "extension-template",
          "master": false,
          "version": "1.0.0",
          "description":
            "Create an extension\n\nExtension for creating:\n\n* menubar items,\n* toolbar items,\n* actions when clicking on them and\n* show modal dialog.",
          "schemas": {
            "p181111d5c01f97b": {
              "_id": "p181111d5c01f97b",
              "_inherit": ["_Component"],
              "_name": "HTML",
              "render": "method",
              "source": "property"
            },
            "t19b6b11ff31158d": {
              "_id": "t19b6b11ff31158d",
              "_name": "ToolBarItem",
              "_inherit": ["_Component"],
              "html": "link",
              "position": "property",
              "type": "property",
              "platform": "property",
              "render": "method",
              "click": "event"
            },
            "l1d113198721599d": {
              "_id": "l1d113198721599d",
              "_name": "MenuItem",
              "_inherit": ["_Component"],
              "html": "link",
              "position": "property",
              "type": "property",
              "name": "property",
              "platform": "property",
              "render": "method",
              "click": "event"
            },
            "l1cbdc1fc4612ece": {
              "_id": "l1cbdc1fc4612ece",
              "_name": "Modal",
              "_inherit": ["_Component"],
              "title": "property",
              "message": "property",
              "html": "link",
              "ok": "event",
              "cancel": "event",
              "show": "method",
              "hide": "method",
              "render": "method"
            }
          },
          "models": {
            "w1417e1d6d613a0d": {
              "_id": "w1417e1d6d613a0d",
              "_name": "HTML",
              "source": {
                "type": "html",
                "readOnly": true,
                "mandatory": true,
                "default": ""
              },
              "render": {
                "params": [
                  {
                    "name": "id",
                    "type": "any",
                    "mandatory": false,
                    "default": null
                  }
                ]
              }
            },
            "u1f4c7177bb1a459": {
              "_id": "u1f4c7177bb1a459",
              "_name": "ToolBarItem",
              "html": {
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "toolbar-item-template.html"
              },
              "position": {
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 100
              },
              "type": {
                "type": "editorType",
                "readOnly": false,
                "mandatory": false,
                "default": "designer"
              },
              "render": {},
              "click": {},
              "platform": {
                "type": "platform",
                "readOnly": false,
                "mandatory": false,
                "default": "all"
              }
            },
            "u1f9a01abe31b3bf": {
              "_id": "u1f9a01abe31b3bf",
              "_name": "MenuItem",
              "html": {
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "menuitem-template.html"
              },
              "position": {
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 100
              },
              "type": {
                "type": "editorType",
                "readOnly": false,
                "mandatory": false,
                "default": "designer"
              },
              "name": {
                "type": "string",
                "readOnly": false,
                "mandatory": false,
                "default": "template"
              },
              "platform": {
                "type": "platform",
                "readOnly": false,
                "mandatory": false,
                "default": "all"
              },
              "render": {},
              "click": {}
            },
            "q1d12b19f4712a7a": {
              "_id": "q1d12b19f4712a7a",
              "_name": "Modal",
              "title": {
                "type": "text",
                "readOnly": true,
                "mandatory": false,
                "default": ""
              },
              "message": {
                "type": "text",
                "readOnly": true,
                "mandatory": false,
                "default": ""
              },
              "html": {
                "type": "HTML",
                "readOnly": false,
                "mandatory": false,
                "default": "modal-template.html"
              },
              "show": {},
              "hide": {},
              "cancel": {},
              "ok": {},
              "render": {}
            }
          },
          "behaviors": {
            "g10c63191dc16341": {
              "_id": "g10c63191dc16341",
              "component": "toolbar-item-template",
              "state": "click",
              "action":
                "function click() { \n  this.require('modal-template').render();\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "d1bdde1f59f1befe": {
              "_id": "d1bdde1f59f1befe",
              "component": "Modal",
              "state": "show",
              "action":
                "function show() { \n  var id = this.html().id().replace('.html', '');\n  $('#' + id).modal('show');\n}",
              "useCoreAPI": false,
              "core": false
            },
            "n1467b1097a16481": {
              "_id": "n1467b1097a16481",
              "component": "Modal",
              "state": "hide",
              "action":
                "function hide() { \n  var id = this.html().id().replace('.html', '');\n  $('#' + id).modal('hide');\n}",
              "useCoreAPI": false,
              "core": false
            },
            "t1fb0b150c810528": {
              "_id": "t1fb0b150c810528",
              "component": "Modal",
              "state": "render",
              "action":
                "function render() { \n  var html = '',\n      dom = null,\n      templateId = this.html().id(),\n      id = templateId.replace('.html', '');\n\n  // empty area\n  $('#designer-dialog').empty();\n\n  // render\n  html = this.html();\n  document.querySelector('#designer-dialog').insertAdjacentHTML('afterbegin',\n    html.source()\n      .replace(/{{title}}/gi, this.title())\n      .replace(/{{message}}/gi, this.message())\n  );\n\n  // modal events\n  dom = document.getElementById(id + '-cancel');\n  dom.addEventListener('click', function click(event) {\n    this.cancel();\n  }.bind(this));\n  \n  dom = document.getElementById(id + '-ok');\n  dom.addEventListener('click', function click(event) {\n    this.ok();\n  }.bind(this));\t\t\n  \n  // show modal\n  $('#' + id).modal('show');\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "w1cffe198cb19e9c": {
              "_id": "w1cffe198cb19e9c",
              "component": "modal-template",
              "state": "cancel",
              "action": "function cancel() { \n  this.hide();\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "c1bee91492f11173": {
              "_id": "c1bee91492f11173",
              "component": "modal-template",
              "state": "ok",
              "action": "function ok() { \n  this.hide();\t\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "editorType": {
              "name": "editorType",
              "type": "string",
              "value": [
                "designer",
                "system",
                "type",
                "schema",
                "model",
                "behavior",
                "component"
              ]
            },
            "platform": {
              "_id": "r10214160211309c",
              "name": "platform",
              "type": "string",
              "value": ["all", "web", "electron", "cordova"]
            }
          },
          "components": {
            "ToolBarItem": {
              "toolbar-item-template": {
                "_id": "toolbar-item-template",
                "html": "toolbar-item-template.html",
                "platform": "all",
                "position": 70,
                "type": "designer"
              }
            },
            "HTML": {
              "menuitem-template.html": {
                "_id": "menuitem-template.html",
                "source":
                  "<a id=\"designer-menu-item-template\" href=\"#template\">Template</a>"
              },
              "toolbar-item-template.html": {
                "_id": "toolbar-item-template.html",
                "source":
                  "<button type=\"button\" id=\"designer-toolbar-item-template\" class=\"btn btn-default btn-lg\" data-toggle=\"tooltip\" data-placement=\"right\" title=\"Template\">\n  <span class=\"glyphicon glyphicon-star\" aria-hidden=\"true\"></span>\n</button>"
              },
              "modal-template.html": {
                "_id": "modal-template.html",
                "source":
                  "<div class=\"modal fade\" id=\"modal-template\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"modalLabel\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modalLabel\">{{title}}</h4>\n      </div>\n      <div class=\"modal-body\">\n        {{message}}\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" id=\"modal-template-cancel\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-primary\" id=\"modal-template-ok\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>"
              }
            },
            "MenuItem": {},
            "Modal": {
              "modal-template": {
                "_id": "modal-template",
                "message": "This is a template of a modal dialog.",
                "title": "An example of modal dialog",
                "html": "modal-template.html"
              }
            }
          },
          "_id": "h1ffb312ef619349"
        }
      },
      "03-send-messages.json": {
        "_id": "03-send-messages.json",
        "source": {
          "name": "send-messages",
          "master": true,
          "version": "1.0.0",
          "description":
            "Send messages threw a channel\n\n\nYou can send messages from one system to another system with channels. To do that:\n\n1. Define an event in '_Channel' schema and model.\n2. In '_Channel' 'send' method, define how to send the message to another channel (webRTC, XHR, ...).\n3. In another system, define how to get the message and send it to the system with: runtime.message().\n4. To send a message: this.require('channel').myevent(param1, param2, ...).\n5. To listen to the message, just add a behavior to the event.",
          "schemas": {
            "104ad1f48518376": {
              "_id": "104ad1f48518376",
              "_name": "_Channel",
              "_inherit": ["_Component"],
              "send": "event"
            }
          },
          "models": {
            "135c71078810af2": {
              "_id": "135c71078810af2",
              "_name": "_Channel",
              "send": { "params": [{ "name": "message", "type": "message" }] }
            }
          },
          "behaviors": {
            "1ae8e11ece1a658": {
              "_id": "1ae8e11ece1a658",
              "component": "_Channel",
              "state": "send",
              "action": "function send(message) { \n\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "message": {
              "name": "message",
              "type": "object",
              "schema": {
                "event": {
                  "description": "name of the event",
                  "type": "string",
                  "mandatory": true
                },
                "from": {
                  "description": "id of the system",
                  "type": "string",
                  "mandatory": false
                },
                "data": {
                  "description": "data send",
                  "type": "object",
                  "mandatory": true
                }
              },
              "core": true
            }
          },
          "components": { "_Channel": { "channel": { "_id": "channel" } } },
          "_id": "12eaf148b211195"
        },
        "platform": "all"
      },
      "02-listen-collection-events.json": {
        "_id": "02-listen-collection-events.json",
        "source": {
          "name": "listen-collection-events",
          "master": true,
          "version": "1.0.0",
          "description":
            "Listen to components collection events\n\nSystem Runtime NoSQL Database is an instance of '_Database' class that sends insert, update and remove events for each collection of the database.\n\nYou can listen to all these events to perform the action you want.\n\nnote: events are send for the collections (i.e. schemas) you have created but also for the private collections of the database.",
          "schemas": {
            "1723516a30132ac": {
              "_id": "1723516a30132ac",
              "_name": "_Database",
              "_inherit": ["_Component"],
              "_core": true,
              "insert": "event",
              "update": "event",
              "remove": "event"
            }
          },
          "models": {
            "13b4415f6511c15": {
              "_id": "13b4415f6511c15",
              "_name": "_Database",
              "_core": true,
              "insert": {
                "params": [{ "name": "event", "type": "dbInsertEvent" }]
              },
              "update": {
                "params": [{ "name": "event", "type": "dbUpdateEvent" }]
              },
              "remove": {
                "params": [{ "name": "event", "type": "dbRemoveEvent" }]
              }
            }
          },
          "behaviors": {
            "1de8c154bb18a01": {
              "_id": "1de8c154bb18a01",
              "component": "_Database",
              "state": "insert",
              "action":
                "function insert(event) { \n  // always filter on the schema you want\n  if (event.collection === '') {\n    \n  }\t\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "173ff13cde1c29e": {
              "_id": "173ff13cde1c29e",
              "component": "_Database",
              "state": "remove",
              "action":
                "function remove(event) { \n  // always filter on the schema you want\n  if (event.collection === '') {\n    \n  }\t\n}",
              "useCoreAPI": false,
              "core": false
            },
            "1e0a71b78c1fd0e": {
              "_id": "1e0a71b78c1fd0e",
              "component": "_Database",
              "state": "update",
              "action":
                "function update(event) { \n  // always filter on the schema you want\n  if (event.collection === '') {\n    \n  }\t\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {
            "dbUpdateEvent": {
              "_id": "1f5c41309711752",
              "name": "dbUpdateEvent",
              "type": "object",
              "schema": {
                "collection": {
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "id": { "type": "string", "mandatory": true, "default": "" },
                "field": { "type": "string", "mandatory": true, "default": "" },
                "value": { "type": "any", "mandatory": true, "default": null }
              }
            },
            "dbRemoveEvent": {
              "_id": "1952e1ac4213f4a",
              "name": "dbRemoveEvent",
              "type": "object",
              "schema": {
                "collection": {
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "id": { "type": "string", "mandatory": true, "default": "" }
              }
            },
            "dbInsertEvent": {
              "_id": "148ef1e19810e6d",
              "name": "dbInsertEvent",
              "type": "object",
              "schema": {
                "collection": {
                  "type": "string",
                  "mandatory": true,
                  "default": ""
                },
                "document": {
                  "type": "object",
                  "mandatory": true,
                  "default": {}
                }
              }
            }
          },
          "components": {},
          "_id": "1d4431844018720"
        },
        "platform": "all"
      },
      "00-quickstart": {
        "_id": "00-quickstart",
        "platform": "all",
        "source": {
          "name": "quick-start",
          "master": true,
          "version": "1.0.0",
          "description":
            "Quick start\n\nThis system is taken from the quick start: https://system-designer.readme.io/docs/quick-start",
          "schemas": {
            "154661fa5617782": {
              "_id": "154661fa5617782",
              "_name": "Jedi",
              "_inherit": ["_Component"],
              "firstName": "property",
              "lastName": "property",
              "father": "link",
              "fullName": "method"
            }
          },
          "models": {
            "1a3a2150b31c099": {
              "_id": "1a3a2150b31c099",
              "_name": "Jedi",
              "firstName": {
                "type": "string",
                "readOnly": false,
                "mandatory": true,
                "default": ""
              },
              "lastName": {
                "type": "string",
                "readOnly": false,
                "mandatory": true,
                "default": ""
              },
              "father": {
                "type": "Jedi",
                "readOnly": false,
                "mandatory": false,
                "default": ""
              },
              "fullName": { "result": "string" }
            }
          },
          "behaviors": {
            "137491d3c61213b": {
              "_id": "137491d3c61213b",
              "component": "100e51f87218a8f",
              "state": "start",
              "action":
                "function start() {\n  var luke = null,\n      logger = null;\n  \n  // get logger component\n  logger = this.require('logger');\n  \n  // get luke component\n  luke = this.require('luke');\n  \n  // get the name of the father of Luke\n  logger.info(luke.father().fullName());\n}",
              "useCoreAPI": false,
              "core": false
            },
            "11a2910bbd142e1": {
              "_id": "11a2910bbd142e1",
              "component": "Jedi",
              "state": "fullName",
              "action":
                "function fullName() {\n  var result = this.firstName() + ' ' + this.lastName();\n  return result;\n}",
              "useCoreAPI": false,
              "core": false
            }
          },
          "types": {},
          "components": {
            "Jedi": {
              "vador": {
                "_id": "vador",
                "father": "",
                "firstName": "Dark",
                "lastName": "Vador"
              },
              "luke": {
                "_id": "luke",
                "father": "vador",
                "firstName": "Luke",
                "lastName": "Skywalker"
              }
            }
          },
          "_id": "100e51f87218a8f"
        }
      }
    }
  },
  "_id": "p146a5167591a801"
}
