{
    "name": "class-toolbar",
    "master": false,
    "subsystem": false,
    "version": "1.0.0",
    "description": "",
    "schemas": {
        "f1257f17deb16097": {
            "_name": "ToolBar",
            "items": "collection",
            "render": "method",
            "_id": "f1257f17deb16097",
            "_inherit": [
                "_Component"
            ]
        },
        "t19b6b11ff31158d": {
            "_name": "ToolBarItem",
            "html": "link",
            "position": "property",
            "type": "property",
            "hide": "method",
            "show": "method",
            "render": "method",
            "click": "event",
            "_id": "t19b6b11ff31158d",
            "_inherit": [
                "_Component"
            ]
        }
    },
    "models": {
        "l129a713e681c903": {
            "_name": "ToolBar",
            "items": {
                "type": [
                    "@ToolBarItem"
                ],
                "readOnly": false,
                "mandatory": false,
                "default": []
            },
            "render": {},
            "_id": "l129a713e681c903"
        },
        "u1f4c7177bb1a459": {
            "_name": "ToolBarItem",
            "html": {
                "type": "@HTML",
                "readOnly": false,
                "mandatory": false,
                "default": ""
            },
            "position": {
                "type": "number",
                "readOnly": false,
                "mandatory": false,
                "default": 0
            },
            "type": {
                "type": "editorType",
                "readOnly": false,
                "mandatory": false,
                "default": "designer"
            },
            "hide": {},
            "show": {},
            "render": {},
            "click": {},
            "_id": "u1f4c7177bb1a459"
        }
    },
    "behaviors": {
        "a13b711adba1c7d4": {
            "_id": "a13b711adba1c7d4",
            "component": "163a01b7ca1935c",
            "state": "click",
            "action": "function click() {\n    var debugWindow = this.require('designer').debugWindow(),\n        config = this.require('storage').get('system-designer-config'),\n        message = this.require('message');\n\n    $('#designer-toolbar-item-refresh').tooltip('hide');\n    if (config) {\n        if (typeof config.debugType !== 'undefined' && config.debugType === 'client') {\n            if (config.urlClient) {\n                if (debugWindow && !debugWindow.closed) {\n                    message.success('Searching for a system...');\n                    this.require('channel').$designerSync();\n                } else {\n                    this.require('designer').debugWindow(this.require('designer').open(config.urlClient, 'debug'));\n                }\n            } else {\n                message.warning('No url set. Please set the url in the configuration panel.');\n            }\n        }\n        if (typeof config.debugType !== 'undefined' && config.debugType === 'server') {\n            if (config.urlServer) {\n                message.success('Searching for a server...');\n                var self = this;\n                $.getJSON(config.urlServer + ':8888/$designerSync', function (system) {\n                    var Dialog = null,\n                        dialog = null;\n    \n                    Dialog = self.require('DialogImport');\n                    dialog = new Dialog({\n                        'title': 'A system has been found',\n                        'message': 'Do you wan to import it ?',\n                        'data': system\n                    });\n                    dialog.show();\n    \n                    dialog.on('ok', function () {\n                      var System = this.require('System'),\n                          sys = null,\n                          designer = this.require('designer'),\n                          message = this.require('message');\n              \n                      if (designer.system()) {\n                          designer.system().destroy();\n                      }\n                      sys = new System(this.data());\n                      designer.system(sys);\n              \n                      // empty log\n                      designer.logs().forEach(function (item) {\n                          this.logs().pop();\n                      }.bind(designer));\n              \n                      designer.save();\n              \n                      designer.space(sys.name());\n                      this.require('spaces').render();\n                      this.require('workspace').render();\n                      \n                      designer.updateRouter();\n\n                      this.hide();\n                      designer.save();\n              \n                      message.success('Importation of the system is done.');\n                    });\n                });\n            } else {\n                message.warning('No url set. Please set the url in the configuration panel.');\n            }\n        }\n        if (typeof config.debugType === 'undefined') {\n            message.warning('No url set. Please set the url in the configuration panel.');\n        }\n    } else {\n        message.warning('No url set. Please set the url in the configuration panel.');\n    }\n}"
        },
        "e137f915b1b15f90": {
            "_id": "e137f915b1b15f90",
            "component": "163a01b7ca1935e",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-export').tooltip('hide');\n    var message = this.require('message');\n    var Dialog = this.require('DialogExport');\n    \n    if (this.require('designer').system()) {\n      var dialog = new Dialog({\n          'title': 'Export the current system',\n      });\n      dialog.show();\n      \n      dialog.on('ok', function () {\n          var message = this.require('message');\n          // code inspired from the blog post\n          // https://thiscouldbebetter.wordpress.com/2012/12/18/loading-editing-and-saving-a-text-file-in-html5-using-javascrip/\n          if (this.require('designer').system()) {\n              var system = null,\n              textToWrite = null,\n              textFileAsBlob = null,\n              fileNameToSaveAs = null,\n              downloadLink = null,\n              js = '';\n              source = '',\n              DialogShare = this.require('DialogShare');\n              \n              system = this.require('db').collections().System.find({\n                  '_id': this.require('designer').system().id()\n              })[0];\n              system = JSON.parse(JSON.stringify(system));\n              delete system.classInfo;\n              \n              if ($('#designer-dialog-export-url').prop(\"checked\")) {\n                  this.hide();\n  \n                  DialogShare = new DialogShare({\n                      'title': 'Copy the link to the system'\n                  });\n                  DialogShare.show();\n                  DialogShare.on('ok', function () {\n                      this.hide();\n                  });\n                  \n              } else {\n              \n                  if ($('#designer-dialog-export-json').prop(\"checked\")) {\n                      system = JSON.parse(JSON.stringify(system));\n                      \n                      if ($('#designer-dialog-export-isMaster').prop('checked')) {\n                        system.master = true;\n                      } else {\n                        system.master = false;\n                      }\n                      if ($('#designer-dialog-export-isSubsystem').prop('checked')) {\n                        system.subsystem = true;\n                      } else {\n                        system.subsystem = false;\n                      }\n                      textToWrite = JSON.stringify(system);\n                      fileNameToSaveAs = this.require('designer').system().name() + '.json';\n                  }\n                  \n                  if ($('#designer-dialog-export-javascript').prop('checked')) {\n                      source = decodeURIComponent(this.require('javascript-export.js').source());\n                      source = source\n                                  .replace(/{{version}}/g, this.require('designer').system().version())\n                                  .replace(/{{description}}/g, this.require('designer').system().description().replace(/\\n/g, '\\n * '))\n                                  .replace(/{{name}}/g, this.require('designer').system().name())\n                                  .replace(/{{logLevel}}/g, $('#designer-dialog-export-options-log-level-select').val());\n                                  \n                      // SYSTEM\n                      \n                      var confSystem = {};\n                      \n                      confSystem._id = system._id;\n                      confSystem.name = system.name;\n                      confSystem.version = system.version;\n                      confSystem.description = system.description;\n                      \n                      source = source + '/**\\n';\n                      source = source + ' * System ' +  confSystem.name + '\\n';\n                      source = source + ' * @system\\n';\n                      source = source + ' */\\n';\n                      source = source + 'runtime.system(' + JSON.stringify(confSystem, null, '\\t', 2) + ');\\n\\n';\n                      \n                      // SCHEMA / MODEL / TYPE     \n                      if (Object.keys(system.schemas).length > 0 || Object.keys(system.types).length > 0) {\n                        source = source + '\\n// Schemas, models and types creation\\n\\n\\n';\n                      }\n                      \n                      var name = '';\n                      var schemaSorted = [];\n                      var schemaNameSorted = [];\n                      var schemaName = {};\n                      \n                      for (name in system.schemas) {\n                        schemaSorted.push(system.schemas[name]);\n                        schemaNameSorted.push(system.schemas[name]._name);\n                        schemaName[system.schemas[name]._name] = system.schemas[name]._name;\n                      }\n                      schemaSorted.sort(function (schemaA, schemaB) {\n                        return schemaA._name > schemaB._name;\n                      });\n                      schemaNameSorted.sort();\n                      \n                      schemaSorted.forEach(function (schema) {\n                        source = source + '/**\\n';\n                        source = source + ' * Schema ' +  schema._name + '\\n';\n                        source = source + ' * @schema\\n';\n                        source = source + ' */\\n';\n                        source = source + 'runtime.require(\\'metamodel\\').schema(' + JSON.stringify(schema, null, '\\t', 2) + ');\\n\\n';\n                      });\n                      \n                      var modelSorted = [];\n                      var modelNameSorted = [];\n                      for (name in system.models) {\n                        modelSorted.push(system.models[name]);\n                        modelNameSorted.push(system.models[name]._name);\n                      }\n                      modelSorted.sort(function (modelA, modelB) {\n                        return modelA._name > modelB._name;\n                      });\n                      modelNameSorted.sort();\n                      \n                      modelSorted.forEach(function (model) {\n                        source = source + '/**\\n';\n                        source = source + ' * Model ' +  model._name + '\\n';\n                        source = source + ' * @model\\n';\n                        source = source + ' */\\n';\n                        source = source + 'runtime.require(\\'metamodel\\').model(' + JSON.stringify(model, null, '\\t', 2) + ');\\n\\n';\n                      });\n                      \n                      var typeSorted = [];\n                      var typeNameSorted = [];\n                      for (name in system.types) {\n                        typeSorted.push(system.types[name]);\n                        typeNameSorted.push(system.types[name].name);\n                      }\n                      typeSorted.sort(function (typeA, typeB) {\n                        return typeA.name > typeB.name;\n                      });\n                      typeNameSorted.sort();\n                      \n                      typeSorted.forEach(function (type) {\n                        source = source + '/**\\n';\n                        source = source + ' * Type ' + type.name + '\\n';\n                        source = source + ' * @type\\n';\n                        source = source + ' */\\n';\n                        source = source + 'runtime.require(\\'metamodel\\').type(' + JSON.stringify(type, null, '\\t', 2) + ');\\n\\n';\n                      });\n                      \n                      if (Object.keys(system.schemas).length > 0 || Object.keys(system.models).length > 0 || Object.keys(system.types).length > 0) {\n                        source = source + 'runtime.require(\\'metamodel\\').create();\\n\\n';\n                      }\n                      \n                      // COMPONENT   \n                      if (Object.keys(system.components).length > 0) {\n                        source = source + '\\n// Components creation\\n\\n\\n';\n                      }\n                      schemaNameSorted.forEach(function (collection) {\n                        for (name in system.components[collection]) {\n                          source = source + '/**\\n';\n                          source = source + ' * Component ' +  system.components[collection][name]._id + '\\n';\n                          source = source + ' * @component\\n';\n                          source = source + ' */\\n';\n                          source = source + 'new (runtime.require(\\'' + collection + '\\'))(' + JSON.stringify(system.components[collection][name], null, '\\t', 2) + ');\\n\\n';\n                        }\n                      });\n                      \n                      // BEHAVIOR   \n                      if (Object.keys(system.behaviors).length > 0) {\n                        source = source + '\\n// Behaviors creation\\n\\n\\n';\n                      }\n                      \n                      var behaviors = {};\n                      var behaviorsComponentNameSorted = [];\n                      var modelsByName = {};\n                      \n                      for (name in system.behaviors) {\n                        if (typeof behaviors[system.behaviors[name].component] === 'undefined') {\n                          behaviors[system.behaviors[name].component] = [];\n                        }\n                        behaviors[system.behaviors[name].component].push(system.behaviors[name]);\n                      }\n                  \n                      behaviorsComponentNameSorted = Object.keys(behaviors);\n                      behaviorsComponentNameSorted.sort();\n                      \n                      var id = '';\n                      for (id in system.models) {\n                        modelsByName[system.models[id]._name] = system.models[id];  \n                      }\n                      \n                      behaviorsComponentNameSorted.forEach(function forEach(componentName) {\n                        var componentBehaviors = behaviors[componentName];\n                        \n                        componentBehaviors.sort(function sort(behaviorA, behaviorB) {\n                          return behaviorA.state > behaviorB.state;\n                        });\n                        \n                        if (componentBehaviors.length > 0) {\n                          if (componentName === system._id) {\n                            source = source + '// system behaviors\\n\\n';\n                          } else {\n                            source = source + '// ' + componentName + ' behaviors\\n\\n';\n                          }\n                        }\n                        \n                        componentBehaviors.forEach(function forEach(behavior) {\n                          var useCoreAPI = typeof behavior.useCoreAPI !== 'undefined' ? behavior.useCoreAPI : false;\n                          var core = typeof behavior.core !== 'undefined' ? behavior.core : false;\n                          var comp = '';\n                          var behaviorParamDef = {};\n                          var options = ');\\n\\n';\n                          \n                          if (useCoreAPI && !core) {\n                            options = ', true);\\n\\n';\n                          }\n                          if (useCoreAPI && core) {\n                            options = ', true, true);\\n\\n';\n                          }\n                          \n                          source = source + '/**\\n';\n                          source = source + ' * @method ' + behavior.state  + '\\n';\n                          \n                          if (modelsByName[behavior.component] && modelsByName[behavior.component][behavior.state] && modelsByName[behavior.component][behavior.state].params) {\n                            modelsByName[behavior.component][behavior.state].params.forEach(function forEach(param) {\n                              source = source + ' * @param {' + param.type  + '} '  + param.name + '\\n';    \n                            });\n                          }\n                          if (modelsByName[behavior.component] && modelsByName[behavior.component][behavior.state] && modelsByName[behavior.component][behavior.state].result) {\n                              source = source + ' * @returns {' + modelsByName[behavior.component][behavior.state].result  + '} \\n';    \n                          }\n                          \n                          source = source + ' */\\n';\n                          \n                          switch (true) {\n                            case behavior.component === system._id:\n                              comp = 'runtime.system()';\n                              break;\n                            default:\n                              comp = 'runtime.require(\\'' + behavior.component + '\\')';\n                              break;\n                          } \n                        \n                        source = source + comp + '.on(\\'' + behavior.state + '\\', ' + behavior.action + options;\n                        })\n                      });\n                      \n                      // START\n                      source = source + '// Start the system\\n';\n                      source = source + 'runtime.system().start();\\n';\n                                  \n                      textToWrite = source;\n                      fileNameToSaveAs = this.require('designer').system().name() + '.js';\n                  }\n                  \n                  if ($('#designer-dialog-export-html').prop(\"checked\")) {\n                      js = decodeURIComponent(this.require('system-runtime.min.js').source());\n                      source = this.require('export-app.html').source();\n                      source = source\n                                  .replace(/{{library}}/g, js)\n                                  .replace(/{{library}}/g, function() {return '\\$&'})\n                                  .replace(/{{name}}/g, this.require('designer').system().name())\n                                  .replace(/{{logLevel}}/g, $('#designer-dialog-export-options-log-level-select').val())\n                                  .replace(/{{system}}/g, function(val) {return JSON.stringify(system)});\n                      textToWrite = source;\n                      fileNameToSaveAs = this.require('designer').system().name() + '.html';\n                  }\n                  \n                  if ($('#designer-dialog-export-node').prop(\"checked\")) {\n                      source = decodeURIComponent(this.require('app.js').source());\n                      source = source\n                                  .replace(/{{version}}/g, this.require('designer').system().version())\n                                  .replace(/{{description}}/g, this.require('designer').system().description().replace(/\\n/g, '\\n * '))\n                                  .replace(/{{name}}/g, this.require('designer').system().name())\n                                  .replace(/{{logLevel}}/g, $('#designer-dialog-export-options-log-level-select').val())\n                                  .replace(/{{system}}/g, JSON.stringify(system));\n                      textToWrite = source;\n                      fileNameToSaveAs = this.require('designer').system().name() + '.js';\n                  }\n                  \n                 if (!this.require('designer').isElectron()) {\n\n                  \ttextFileAsBlob = new Blob([textToWrite], {\n                  \t    type:'text/plain'\n                  \t});  \n                  \t\n                    if (navigator.msSaveBlob) {\n                      navigator.msSaveBlob(textFileAsBlob, fileNameToSaveAs);\n                    } else {\n\n                    \tdownloadLink = document.createElement('a');\n                    \t\n                    \tdownloadLink.download = fileNameToSaveAs;\n                    \tdownloadLink.innerHTML = 'Download File';\n                    \tif (window.webkitURL != null) {\n                    \t\tdownloadLink.href = window.webkitURL.createObjectURL(textFileAsBlob);\n                    \t} else {\n                    \t\tdownloadLink.href = window.URL.createObjectURL(textFileAsBlob);\n                    \t\tdownloadLink.onclick = function (event) {\n                    \t\t    document.body.removeChild(event.target);\n                    \t\t};\n                    \t\tdownloadLink.style.display = 'none';\n                    \t\tdocument.body.appendChild(downloadLink);\n                    \t}\n                    \tdownloadLink.click();\n                    }\n                  \t\n                  \tthis.hide(); \n                 } else {\n                    this.hide(); \n                    \n                    var {dialog} = global.require(\"electron\").remote;\n                    var fs = global.require('fs');\n                    var savePath = dialog.showSaveDialog({\n                      'defaultPath': '~/' + fileNameToSaveAs\n                    });\n                    if (savePath) {\n                      fs.writeFile(savePath, textToWrite, function(err) {\n                        if (err) {\n                          message.danger('Exportation failed.');\n                        } else {\n                          message.success('Exportation is done.');\n                        }\n                      });\n                    }\n                 }\n              }\n          \t\n          } else {\n              message.warning('You have no system to export.');\n          }\n      });\n    } else {\n       message.warning('You have no system to export.');\n    }\n}"
        },
        "n14a6613bf419519": {
            "_id": "n14a6613bf419519",
            "component": "1dbc51220e116e1",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-copyright').tooltip('hide');\n    var DialogCopyright = this.require('DialogCopyright');\n    var message = this.require('copyright.html');\n    \n    DialogCopyright = new DialogCopyright({\n        'title': 'System Designer',\n        'message': message.source().replace('{{version}}', this.require('designer').version())\n    });\n    DialogCopyright.show();\n    DialogCopyright.on('ok', function () {\n        this.hide();\n    });\n}"
        },
        "c1bb2614ca314a68": {
            "_id": "c1bb2614ca314a68",
            "component": "1dbc51300e11z11",
            "state": "click",
            "action": "function click() {\n    var data = this.require('designer').store().data();\n    \n    $('#designer-toolbar-item-export-document').tooltip('hide');\n    \n    var name = data.name;\n    var doc = JSON.parse(JSON.stringify(data));\n    delete doc.classInfo;\n    this.require('designer').saveAs(doc, data.name + '.json');\n}"
        },
        "b1af5812c0310fcf": {
            "_id": "b1af5812c0310fcf",
            "component": "1dbc51300e11z12",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-export-document').tooltip('hide');\n    \n    var data = this.require('designer').store().data();\n    var doc = {\n        \"name\": \"schema \" + data._name,\n        \"master\": false,\n        \"subsystem\": true,\n        \"version\": \"0.0.1\",\n        \"description\": \"Schema \" + data._name,\n        \"schemas\": {},\n        \"models\": {},\n        \"behaviors\": {},\n        \"types\": {},\n        \"components\": {}\n    };\n    \n    // clean\n    doc.name = doc.name.trim();\n    doc.name = doc.name.replace(/ /gi, '-');\n    doc.name = doc.name.toLocaleLowerCase();\n    \n    doc.schemas[data._id] = data;\n    \n    this.require('designer').saveAs(doc, 'schema.' + data._name.replace(/ /gi, '-').toLowerCase() + '.json');\n}"
        },
        "l14395177b314b43": {
            "_id": "l14395177b314b43",
            "component": "1dbc51300e11z13",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-export-document').tooltip('hide');\n    \n    var data = this.require('designer').store().data();\n    var doc = {\n        \"name\": \"model \" + data._name,\n        \"master\": false,\n        \"subsystem\": true,\n        \"version\": \"0.0.1\",\n        \"description\": \"Model \" + data._name,\n        \"schemas\": {},\n        \"models\": {},\n        \"behaviors\": {},\n        \"types\": {},\n        \"components\": {}\n    };\n    \n    // clean\n    doc.name = doc.name.trim();\n    doc.name = doc.name.replace(/ /gi, '-');\n    doc.name = doc.name.toLocaleLowerCase();\n    \n    doc.models[data._id] = data;\n    \n    this.require('designer').saveAs(doc, 'model.' + data._name.replace(/ /gi, '-').toLowerCase() + '.json');\n}"
        },
        "i14acd1202219642": {
            "_id": "i14acd1202219642",
            "component": "1dbc51300e11z14",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-export-document').tooltip('hide');\n    \n    var data = this.require('designer').store().data();\n    var doc = {\n        \"name\": \"type \" + data.name,\n        \"master\": false,\n        \"subsystem\": true,\n        \"version\": \"0.0.1\",\n        \"description\": \"Type \" + data.name,\n        \"schemas\": {},\n        \"models\": {},\n        \"behaviors\": {},\n        \"types\": {},\n        \"components\": {}\n    };\n\n    // clean\n    doc.name = doc.name.trim();\n    doc.name = doc.name.replace(/ /gi, '-');\n    doc.name = doc.name.toLocaleLowerCase();\n\n    doc.types[data.name] = data;\n\n    this.require('designer').saveAs(doc, 'type.' + data.name.replace(/ /gi, '-').toLowerCase() + '.json');\n}"
        },
        "i179d41548d114e6": {
            "_id": "i179d41548d114e6",
            "component": "1dbc51300e11z15",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-export-document').tooltip('hide');\n    \n    var data = this.require('designer').store().data();\n    var name = data.state;\n    var exportName = '';\n    var doc = {\n        \"name\": \"behavior \" + name,\n        \"master\": false,\n        \"subsystem\": true,\n        \"version\": \"0.0.1\",\n        \"description\": \"Behavior \" + name,\n        \"schemas\": {},\n        \"models\": {},\n        \"behaviors\": {},\n        \"types\": {},\n        \"components\": {}\n    };\n\n    // clean\n    doc.name = doc.name.trim();\n    doc.name = doc.name.replace(/ /gi, '-');\n    doc.name = doc.name.toLocaleLowerCase();\n\n    doc.behaviors[data._id] = data;\n\n    if (this.require('designer').store().data().component === this.require('designer').system().id()) {\n        exportName = 'behavior.' + this.require('designer').system().name() + '.' + name.replace(/ /gi, '-').toLowerCase() + '.json';\n    } else {\n        exportName = 'behavior.' + this.require('designer').store().data().component + '.' + name.replace(/ /gi, '-').toLowerCase() + '.json';\n    }\n\n    this.require('designer').saveAs(doc, exportName);\n}"
        },
        "g1706d148ae11f5d": {
            "_id": "g1706d148ae11f5d",
            "component": "1dbc51300e11z16",
            "state": "click",
            "action": "function click() {\n    $('#designer-toolbar-item-export-document').tooltip('hide');\n    \n    var data = this.require('designer').store().data();\n    var name = data._id;\n    var model = this.require('designer').store().collection();\n    var doc = {\n        \"name\": \"component \" + name,\n        \"master\": false,\n        \"subsystem\": true,\n        \"version\": \"0.0.1\",\n        \"description\": \"Component \" + name,\n        \"schemas\": {},\n        \"models\": {},\n        \"behaviors\": {},\n        \"types\": {},\n        \"components\": {}\n    };\n\n    // clean\n    doc.name = doc.name.trim();\n    doc.name = doc.name.replace(/ /gi, '-');\n    doc.name = doc.name.toLocaleLowerCase();\n\n    if (typeof doc.models[model]) {\n        doc.components[model] = {};\n    }\n\n    doc.components[model][data._id] = data;\n\n    this.require('designer').saveAs(doc, 'component.' + name.replace(/ /gi, '-').toLowerCase() + '.json');\n}"
        },
        "z14cf91f7131c34d": {
            "_id": "z14cf91f7131c34d",
            "component": "1dbc51300e11z17",
            "state": "click",
            "action": "function click() {\n  $('#designer-toolbar-item-search').tooltip('hide');\n  \n  var message = this.require('message');\n  var Dialog = this.require('DialogSearch');\n  \n  if (this.require('designer').system()) {\n    var dialog = new Dialog({\n        'title': 'Search in the system',\n    });\n    dialog.show();\n    \n    dialog.on('ok', function click() {\n      this.hide();\n    });\n    \n    dialog.on('filter', function filter(value) {\n      var systemId = this.require('designer').system().id(),\n          schemas = this.require('designer').system().schemas(),\n          models = this.require('designer').system().models(),\n          types = this.require('designer').system().types(),\n          behaviors = this.require('designer').system().behaviors(),\n          components = this.require('designer').system().components(),\n          collection = '',\n          id = '',\n          toSearch = '',\n          index = -1,\n          result = [];\n      \n      // clean\n      document.getElementById('designer-dialog-search-result').innerHTML = '';\n\n      if (value.length > 0 && value.trim() !== '') {\n        if (this.inContent()) {\n          \n          // schema\n          for (id in schemas) {\n            toSearch = JSON.stringify(schemas[id]);\n            index = toSearch.toLowerCase().indexOf(value.toLowerCase());\n            if (index !=-1) {\n              link = '<a href=\"#' + systemId + '#schemas#' + id + '\" class=\"list-group-item\" class=\"list-group-item active\">' +\n                '<h4 class=\"list-group-item-heading\">Schema ' + schemas[id]._name + '</h4>' +\n                '<p class=\"list-group-item-text\">...' + toSearch.substring(index - 20, index + value.length + 20) + '...</p>' +\n                '</a>';\n              \n              result.push(link);\n            }\n          }\n          \n          // model\n          for (id in models) {\n            toSearch = JSON.stringify(models[id]);\n            index = toSearch.toLowerCase().indexOf(value.toLowerCase());\n            if (index !=-1) {\n              link = '<a href=\"#' + systemId + '#models#' + id + '\" class=\"list-group-item\" class=\"list-group-item active\">' +\n                '<h4 class=\"list-group-item-heading\">Model ' + models[id]._name + '</h4>' +\n                '<p class=\"list-group-item-text\">...' + toSearch.substring(index - 20, index + value.length + 20) + '...</p>' +\n                '</a>';\n              \n              result.push(link);\n            }\n          }\n          \n          // type\n          for (id in types) {\n            toSearch = JSON.stringify(types[id]);\n            index = toSearch.toLowerCase().indexOf(value.toLowerCase());\n            if (index !=-1) {\n              link = '<a href=\"#' + systemId + '#types#' + types[id].name + '\" class=\"list-group-item\" class=\"list-group-item active\">' +\n                '<h4 class=\"list-group-item-heading\">Type ' + types[id].name + '</h4>' +\n                '<p class=\"list-group-item-text\">...' + toSearch.substring(index - 20, index + value.length + 20) + '...</p>' +\n                '</a>';\n              \n              result.push(link);\n            }\n          }\n          \n          // behavior\n          for (id in behaviors) {\n            toSearch = behaviors[id].action;\n            index = toSearch.toLowerCase().indexOf(value.toLowerCase());\n            if (index !=-1) {\n              link = '<a href=\"#' + systemId + '#behaviors#' + behaviors[id].component + '#' + behaviors[id].state +'\" class=\"list-group-item\" class=\"list-group-item active\">' +\n                '<h4 class=\"list-group-item-heading\">Behavior ' + behaviors[id].component + '.' + behaviors[id].state + '</h4>' +\n                '<p class=\"list-group-item-text\">...' + toSearch.substring(index - 20, index + value.length + 20) + '...</p>' +\n                '</a>';\n              \n              result.push(link);\n            }\n          }\n          \n          // components\n          for (collection in components) {\n            for (id in components[collection]) {\n              toSearch = JSON.stringify(components[collection][id]);\n              index = toSearch.toLowerCase().indexOf(value.toLowerCase());\n              if (index !=-1) {\n                link = '<a href=\"#' + systemId + '#components#' + collection + '#' + id +'\" class=\"list-group-item\" class=\"list-group-item active\">' +\n                  '<h4 class=\"list-group-item-heading\">Component ' + components[collection][id]._id + '</h4>' +\n                  '<p class=\"list-group-item-text\">...' + toSearch.substring(index - 20, index + value.length + 20).replace('<', '&lt;') + '...</p>' +\n                  '</a>';\n                \n                result.push(link);\n              }\n            }\n          }\n          \n        } else {\n          // schema\n          for (id in schemas) {\n            if (schemas[id]._name.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n              result.push('<a href=\"#' + systemId + '#schemas#' + id + '\" class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Schema ' + schemas[id]._name + '</h4></a>');\n            }\n          }\n          \n          // model\n          for (id in models) {\n            if (models[id]._name.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n              result.push('<a href=\"#' + systemId + '#models#' + id + '\" class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Model ' + models[id]._name + '</h4></a>');\n            }\n          }\n          \n          // type\n          for (id in types) {\n            if (types[id].name.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n              result.push('<a href=\"#' + systemId + '#types#' + types[id].name + '\" class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Type ' + types[id].name + '</h4></a>');\n            }\n          }\n          \n          // behaviors\n          for (id in behaviors) {\n            if (behaviors[id].state.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n              result.push('<a href=\"#' + systemId + '#behaviors#' + behaviors[id].component + '#' + behaviors[id].state +'\" class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Behavior ' + behaviors[id].component + '.' + behaviors[id].state + '</h4></a>');\n            }\n          }\n          \n          // components\n          for (collection in components) {\n            for (id in components[collection]) {\n              if (components[collection][id]._id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                result.push('<a href=\"#' + systemId + '#components#' + collection + '#' + id +'\" class=\"list-group-item\" class=\"list-group-item\"><h4 class=\"list-group-item-heading\">Component ' + components[collection][id]._id + '</h4></a>');\n              }\n            }\n          }\n        }\n        \n        // result\n        document.getElementById('designer-dialog-search-result').innerHTML = result.join(' ');\n      }\n    });\n  } else {\n    message.warning('There is no system.');\n  }\n}"
        },
        "u165f215d0217974": {
            "_id": "u165f215d0217974",
            "component": "1dbc513e0e11z15",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-copy').tooltip('hide');\n    this.require('editor').copy(); \n}"
        },
        "f1846f199e41074c": {
            "_id": "f1846f199e41074c",
            "component": "1dbc513e0e11z16",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-paste').tooltip('hide');\n   this.require('editor').paste(); \n}"
        },
        "u1148712dc118eea": {
            "_id": "u1148712dc118eea",
            "component": "sdbc51200e11z03",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-copy').tooltip('hide');\n    this.require('editor').copy(); \n}"
        },
        "l1c2d911d83104a2": {
            "_id": "l1c2d911d83104a2",
            "component": "sdbc51200e11z04",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-paste').tooltip('hide');\n   this.require('editor').paste(); \n}"
        },
        "d10d6e1b5571c73b": {
            "_id": "d10d6e1b5571c73b",
            "component": "tdbc51200e11z03",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-copy').tooltip('hide');\n    this.require('editor').copy(); \n}"
        },
        "m17c7d1483011aa2": {
            "_id": "m17c7d1483011aa2",
            "component": "tdbc51200e11z04",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-paste').tooltip('hide');\n   this.require('editor').paste(); \n}"
        },
        "t15f921e6a316234": {
            "_id": "t15f921e6a316234",
            "component": "udbc51200e11z03",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-copy').tooltip('hide');\n    this.require('editor').copy(); \n}"
        },
        "d10e191ee9813950": {
            "_id": "d10e191ee9813950",
            "component": "udbc51200e11z04",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-paste').tooltip('hide');\n   this.require('editor').paste(); \n}"
        },
        "m134c713c841c559": {
            "_id": "m134c713c841c559",
            "component": "vdbc51200e11z03",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-copy').tooltip('hide');\n    this.require('editor').copy(); \n}"
        },
        "w1f5751bd9e15f00": {
            "_id": "w1f5751bd9e15f00",
            "component": "vdbc51200e11z04",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-paste').tooltip('hide');\n   this.require('editor').paste(); \n}"
        },
        "x1013f12b661a249": {
            "_id": "x1013f12b661a249",
            "component": "wdbc51200e11z03",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-copy').tooltip('hide');\n    this.require('editor').copy(); \n}"
        },
        "v1639613d361aacf": {
            "_id": "v1639613d361aacf",
            "component": "wdbc51200e11z04",
            "state": "click",
            "action": "function click() { \n    $('#designer-toolbar-item-paste').tooltip('hide');\n   this.require('editor').paste(); \n}"
        },
        "n12d44154da1020f": {
            "_id": "n12d44154da1020f",
            "component": "ToolBar",
            "state": "render",
            "action": "function render() { \n  var domItems = document.getElementById('designer-toolbar-items'),\n    i = 0,\n    length = 0,\n    item = null,\n    toolBarItems = [],\n    self = this;\n\n  // get items\n  toolBarItems = this.require('db').collections().ToolBarItem.find({\n    'type': this.require('designer').type()\n  });\n\n  // sort items\n  toolBarItems.sort(function (itemA, itemB) {\n    if (itemA.position > itemB.position) {\n      return 1;\n    }\n    if (itemA.position < itemB.position) {\n      return -1;\n    }\n    return 0;\n  });\n\n  toolBarItems.forEach(function (toolBarItem) {\n    var id = toolBarItem._id;\n    self.items().push(self.require(id));\n  });\n\n  // render items\n  this.items().forEach(function (item) {\n    domItems.insertAdjacentHTML('beforeend', '<li>' + item.html().source() + '</>');\n  });\n\n  // add events\n  length = domItems.children.length;\n  for (i = 0; i < length; i++) {\n    item = domItems.children[i];\n    item.addEventListener('click', function () {\n      this.click();\n    }.bind(self.items(i)));\n  }\n}",
            "useCoreAPI": false,
            "core": false
        }
    },
    "types": {},
    "components": {
        "ToolBar": {
            "toolbar": {
                "_id": "toolbar",
                "items": []
            }
        }
    },
    "_id": "o1a37519ca718bc4"
}
